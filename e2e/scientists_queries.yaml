---
name: scientists
queries:
  - query: relativ-star-scientists
    solutions:
      - type: text
        sparql: |
          SELECT ?x SCORE(?t) TEXT(?t) WHERE {
              ?x <is-a> <Scientist> .
              ?t ql:contains-entity ?x .
              ?t ql:contains-word "relati*"
          }
          ORDER BY DESC(SCORE(?t))
  - query: algo-star-female-scientists
    solutions:
      - type: text
        sparql: |
          SELECT ?x SCORE(?t) TEXT(?t) WHERE {
              ?x <is-a> <Scientist> .
              ?x <Gender> <Female> .
              ?t ql:contains-entity ?x .
              ?t ql:contains-word "algo*"
          }
          ORDER BY DESC(SCORE(?t))
  - query: scientists-from-new-york
    solutions:
      - type: no-text
        sparql: |
          SELECT ?x WHERE {
              ?x <is-a> <Scientist> .
              ?x <Place_of_birth> <New_York_City>
          }
  - query: scientists-married-to-scientists
    solutions:
      - type: no-text
        # Note this has everyone?! twice, once for each direction
        sparql: |
          SELECT ?x ?y WHERE {
              ?x <is-a> <Scientist> .
              ?x <Spouse_(or_domestic_partner)> ?y .
              ?y <is-a> <Scientist> .
          } ORDER BY ASC(?x)
  - query: scientists-count-group-by-place-of-birth
    solutions:
      - type: no-text
        sparql: |
          SELECT (COUNT(?x) as ?count) ?place WHERE {
              ?x <is-a> <Scientist> .
              ?x <Place_of_birth> ?place .
          }
          GROUP BY ?place
          ORDER BY DESC(?count)
  - query: group-by-profession-average-height
    solutions:
      - type: no-text
        sparql: |
          SELECT (AVG(?height) as ?avg) ?profession WHERE {
              ?x <is-a> ?profession .
              ?x <Height> ?height .
          }
          GROUP BY ?profession
          ORDER BY DESC(?avg)
  - query: group-by-gender-average-height
    solutions:
      - type: no-text
        sparql: |
          SELECT (AVG(?height) as ?avg) ?gender WHERE {
              ?x <is-a> <Person> .
              ?x <Gender> ?gender .
              ?x <Height> ?height .
          }
          GROUP BY ?gender
          ORDER BY DESC(?avg)
