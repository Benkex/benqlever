SPARQL SELECT ?x WHERE { ?x <is-a> <Book> . ?x <Author> <Anthony_Newman_(Author)> };
SPARQL SELECT ?x WHERE { ?x <Genre> <Comedy> . ?x <is-a> <Award-Nominated_Work> . ?x <is-a> <Film> };
SPARQL SELECT ?x WHERE { ?x <is-a> <Politician> . ?x <Film_performance> ?y . ?y <Genre> <Comedy> };
SPARQL SELECT ?x WHERE { ?x <is-a> <Olympic_athlete> . ?x <is-a> <Deceased_Person> };
SPARQL SELECT ?x WHERE { ?x <Release> <Technodrome,_Volume_2_(Consumer_product)> . ?x <is-a> <Canonical_Version> . ?x <is-a> <Musical_Recording> };
SPARQL SELECT ?x ?y WHERE { ?x <is-a> <Person> . ?x <Country_of_nationality> <Germany> . ?y <Author> ?x . ?y <is-a> <Award-Nominated_Work> };
SPARQL SELECT ?x WHERE { ?x <is-a> <Politician> . ?x <Parent> ?y . ?x <Parent> ?z . ?y <is-a> <Politician> . ?z <is-a> <Politician> };
SPARQL SELECT ?x ?y WHERE{ ?x <is-a> <Monarch> . ?x <is-a> <Deceased_Person> .?x <Cause_of_death> <Assassination> . ?x <Place_of_birth> ?y };
SPARQL SELECT ?x WHERE{ ?x <is-a> <Lake> . ?x <Contained_by> <Russia> };
SPARQL SELECT ?x ?y ?z WHERE{ ?x <is-a> <Musical_Recording> . ?x <Recorded_by> ?y . ?y <Award_Won> <Bollywood_Movie_Humanitarian_Award> . ?y <Celebrity_friend> ?z . ?z <Profession> <Prophet> };
SPARQL SELECT ?p WHERE { ?p <is-a> <Astronaut> };
SPARQL SELECT ?p WHERE { ?p <is-a> <Person> } LIMIT 100;
SPARQL SELECT DISTINCT ?p WHERE { ?p <is-a> <Plant> . ?p <in-context> ?c . <word:edible> <in-context> ?c . <word:leaves> <in-context> ?c };
SPARQL SELECT DISTINCT ?p ?b WHERE { ?p <Sibling> ?b . ?b <Member_of> <The_Beatles> . FILTER(?p != ?b) };
SPARQL SELECT DISTINCT ?b WHERE { ?b <is-a> <Building> . ?b <in-context> ?c . <word:tallest> <in-context> ?c };
SPARQL SELECT DISTINCT ?p WHERE { ?p <is-a> <Person> . ?p <in-context> ?c . <word:drug> <in-context> ?c . <word:death> <in-context> ?c };
SPARQL SELECT DISTINCT ?p ?c WHERE { ?p <is-a> <Person> . ?p <Place_of_birth> ?c . ?c <Contained_by> <Europe> } LIMIT 100;
SPARQL SELECT DISTINCT ?p ?c WHERE { ?p <is-a> <Person> . ?p <Place_of_birth> ?c . ?c <Contained_by> <Europe> } LIMIT 100 OFFSET 100;
SPARQL SELECT DISTINCT ?p ?c WHERE { ?p <is-a> <Person> . ?p <Place_of_birth> ?c . ?c <Contained_by> <Europe> } LIMIT 100 OFFSET 200000;
SPARQL SELECT DISTINCT ?p ?s WHERE { ?p <is-a> <Musician> . ?s <is-a> <Athlete> . ?p <in-context> ?c . ?s <in-context> ?c . <word:friend> <in-context> ?c . FILTER(?p != ?s) } LIMIT 1000;
SPARQL SELECT DISTINCT ?p ?s WHERE { ?p <is-a> <Politician> . ?s <is-a> <Scientist> . ?p <in-context> ?c . ?s <in-context> ?c . <word:friend> <in-context> ?c . ?s <in-context> ?c2 . <word:manhattan> <in-context> ?c2 . <word:project> <in-context> ?c2 . FILTER(?p != ?s) };
SPARQL SELECT ?x WHERE { ?x <is-a> <Computer_scientist> . ?x <in-context> ?c . <word:algorithm> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <Computer_scientist> . ?x <in-context> ?c . <word:doping> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <Computer_scientist> . ?x <in-context> ?c . <word:comp*> <in-context> ?c  };
SPARQL SELECT ?x WHERE { ?x <is-a> <Computer_scientist> . ?x <in-context> ?c . <word:computer> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <Computer_scientist> . ?x <in-context> ?c . <word:trespassing> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <Person> . ?x <in-context> ?c . <word:comp*> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <Person> . ?x <in-context> ?c . <word:company> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <Person> . ?x <in-context> ?c . <word:extrav> <in-context> ?c };
SPARQL SELECT ?ci ?p ?a WHERE { ?ci <is-a> <City/Town/Village> . ?ci <Contained_by> <Asia> . ?ci <in-context> ?c . <word:fire> <in-context> ?c . <word:destroyed> <in-context> ?c . ?ci <Population> ?p . ?ci <Nearby_airport> ?a };
SPARQL SELECT ?c WHERE { <word:database> <in-context> ?c . <word:research> <in-context> ?c } LIMIT 100;
SPARQL SELECT ?e WHERE { ?e <in-context> ?c . <word:semantic> <in-context> ?c . <word:search> <in-context> ?c };
SPARQL SELECT ?p WHERE {?p <is-a> <Scientist> . ?p <Place_of_birth> <Ulm> . ?p <in-context> ?c . <word:rela*> <in-context> ?c };
SPARQL SELECT ?p WHERE {?p <is-a> <Scientist> . ?p <Place_of_birth> <Ulm> . ?p <in-context> ?c . <word:relativity> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <Astronaut> . ?x <in-context> ?c . <word:walk*> <in-context> ?c . <word:moon> <in-context> ?c . ?x <Space_Mission> ?m . ?m <Space_program> <Apollo_program> };
SPARQL SELECT ?x WHERE { ?x <is-a> <Astronaut> . ?x <in-context> ?c . <word:walk*> <in-context> ?c . <word:moon> <in-context> ?c . ?x <in-context> ?c2 . <word:apollo> <in-context> ?c2 };
SPARQL SELECT ?x WHERE { ?x <is-a> <Country> . ?x <in-context> ?c . <word:arab> <in-context> ?c . <word:state> <in-context> ?c . <word:persian> <in-context> ?c . <word:gulf> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <Astronaut> . ?x <in-context> ?c . <word:landed> <in-context> ?c . <word:moon> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <Country> . ?x <in-context> ?c . <word:axis> <in-context> ?c . <word:power> <in-context> ?c . <World_War_II> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <Location> . ?x <in-context> ?c . <word:borough> <in-context> ?c . <New_York> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <Organization> . ?x <in-context> ?c . <word:branch> <in-context> ?c . <word:united> <in-context> ?c . <word:states> <in-context> ?c . <word:military> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <Continent> };
SPARQL SELECT ?x WHERE { ?x <Sibling> <Nicole_Kidman> };
SPARQL SELECT ?x WHERE { ?x <is-a> <Person> . ?x <in-context> ?c . <word:sibling> <in-context> ?c . <Nicole_Kidman> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <Organisation> <Church_of_Ireland> };
SPARQL SELECT ?x WHERE { ?x <is-a> <Religious_Jurisdiction> . ?x <in-context> ?c . <word:diocese> <in-context> ?c . <Church_of_Ireland> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <Location> . ?x <in-context> ?c . <word:target> <in-context> ?c . <word:atomic> <in-context> ?c . <word:bomb> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <Written_Work> . ?x <in-context> ?c . <word:tamil> <in-context> ?c . <word:epic> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <Deity> . ?x <in-context> ?c . <word:mount> <in-context> ?c . <word:olympus> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <Sibling> <Henry_II_of_England> };
SPARQL SELECT ?x WHERE { ?x <is-a> <Person> . ?x <in-context> ?c . <word:sibling> <in-context> ?c . <Henry_II_of_England> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <Person> . ?x <in-context> ?c . <word:hijacker> <in-context> ?c . <word:september> <in-context> ?c . <word:11> <in-context> ?c . <word:attacks> <in-context> ?c };
SPARQL SELECT ?x WHERE { <Federal_Assembly> <Component_bodies> ?x};
SPARQL SELECT ?x WHERE { ?x <is-a> <Governmental_Body> . ?x <in-context> ?c . <word:house> <in-context> ?c . <word:russian> <in-context> ?c . <word:parliament> <in-context> ?c };
SPARQL SELECT ?x WHERE { <John_Lennon> <Parent> ?x };
SPARQL SELECT ?x WHERE { ?x <is-a> <Person> . ?x <in-context> ?c . <word:parent> <in-context> ?c . <John_Lennon> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <Cricketer> . ?x <in-context> ?c . <word:captain*> <in-context> ?c . <word:kenya*> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <Sibling> <Kublai_Khan> };
SPARQL SELECT ?x WHERE { ?x <is-a> <Person> . ?x <in-context> ?c . <word:sibling> <in-context> ?c . <Kublai_Khan> <in-context> ?c };
SPARQL SELECT ?x WHERE { <Lily_Allen> <Parent> ?x };
SPARQL SELECT ?x WHERE { ?x <is-a> <Person> . ?x <in-context> ?c . <word:parent*> <in-context> ?c . <Lily_Allen> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <Sports_Association> . ?x <in-context> ?c . <word:major> <in-context> ?c . <word:league> <in-context> ?c . <United_States_of_America> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?e <Series> ?x . <Matt_Berry> <TV_episode_performance> ?e };
SPARQL SELECT ?x WHERE { ?x <is-a> <TV_Programme> . ?x <in-context> ?c . <word:matt> <in-context> ?c . <word:berry> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <Member_of> <U2> };
SPARQL SELECT ?x WHERE { ?x <is-a> <Person> . ?x <in-context> ?c . <word:member*> <in-context> ?c . <word:u2> <in-context> ?c };
SPARQL SELECT ?x WHERE { <Erykah_Badu> <Film_performance> ?x };
SPARQL SELECT ?x WHERE { ?x <is-a> <Film> . ?x <in-context> ?c . <word:appear*> <in-context> ?c . <Erykah_Badu> <in-context> ?c };
SPARQL SELECT ?x WHERE { <Joe_Frazier> <Film_performance> ?x };
SPARQL SELECT ?x WHERE { ?x <is-a> <Film> . ?x <in-context> ?c . <word:appear*> <in-context> ?c . <Joe_Frazier> <in-context> ?c };
SPARQL SELECT ?x WHERE { <Rafael_Rosell> <Film_performance> ?x };
SPARQL SELECT ?x WHERE { ?x <is-a> <Film> . ?x <in-context> ?c . <word:appear*> <in-context> ?c . <Rafael_Rosell> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <Country> . ?x <Official_Language> <Portuguese_Language> };
SPARQL SELECT ?x WHERE { ?x <is-a> <Country> . ?x <in-context> ?c . <word:official> <in-context> ?c . <word:language> <in-context> ?c . <word:portuguese> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <Country> . ?x <in-context> ?c . <word:permanent> <in-context> ?c . <word:member*> <in-context> ?c . <word:united> <in-context> ?c . <word:nations> <in-context> ?c .<word:security> <in-context> ?c .<word:council> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <US_President> . ?x <in-context> ?c . <word:mount> <in-context> ?c . <word:rushmore> <in-context> ?c . ?x <Cause_of_death> <Ballistic_trauma> };
SPARQL SELECT ?x WHERE { ?x <is-a> <US_President> . ?x <in-context> ?c . <word:mount> <in-context> ?c . <word:rushmore> <in-context> ?c . ?x <in-context> ?c2 . <word:shot> <in-context> ?c2 };
SPARQL SELECT ?x WHERE { ?x <is-a> <Musical_Album> . ?x <Artist> <Ratt> };
SPARQL SELECT ?x WHERE { ?x <is-a> <Musical_Album> . ?x <in-context> ?c . <Ratt> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <Country> . ?x <in-context> ?c . <word:former> <in-context> ?c . <word:yugoslavia> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <Revolutionary> . ?x <in-context> ?c . <word:cuba> <in-context> ?c . <word:1959> <in-context> ?c2 . ?x <in-context> ?c2 };
SPARQL SELECT ?x WHERE { ?x <is-a> <US_State> . ?x <in-context> ?c . <word:border> <in-context> ?c . <Oklahoma> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <City/Town/Village> . ?x <in-context> ?c . <word:greek> <in-context> ?c . <word:ancient> <in-context> ?c . <word:cyprus> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <US_State> . ?x <Date_founded> ?d } ORDER BY(?d) LIMIT 13;
SPARQL SELECT ?x WHERE { ?x <is-a> <Person> . ?x <in-context> ?c . <word:companions> <in-context> ?c . <word:prophet> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <Location> . ?x <in-context> ?c . <word:twelve> <in-context> ?c . <word:tribes> <in-context> ?c . <word:israel> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <Book> . ?x <in-context> ?c . <word:paul> <in-context> ?c . <word:tarsus> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <Human_Language> . ?x <in-context> ?c . <word:afghanistan> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <TV_Program> . ?x <in-context> ?c . <Thomas_Jane> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <is-a> <Country> . ?x <in-context> ?c . <word:head> <in-context> ?c . <word:state> <in-context> ?c . <word:british> <in-context> ?c . <word:monarch> <in-context> ?c };
SPARQL SELECT ?x WHERE { ?x <Spouse_(or_domestic_partner)> <Jacki_Weaver> };
SPARQL SELECT ?x WHERE { <Python_(Programming_Language)> <Developer> ?x };
SPARQL SELECT ?x WHERE { ?x <is-a> <Structure> . ?x <in-context> ?c . <word:wonder*> <in-context> ?c . <word:ancient> <in-context> ?c . <word:world> <in-context> ?c };
